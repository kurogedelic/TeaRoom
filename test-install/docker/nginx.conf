events {
    worker_connections 1024;
}

http {
    upstream tearoom_backend {
        server tearoom:9000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss;

    # Main server block
    server {
        listen 80;
        server_name localhost;
        client_max_body_size 10M;

        # Security: Hide nginx version
        server_tokens off;

        # Logging
        access_log /var/log/nginx/tearoom_access.log;
        error_log /var/log/nginx/tearoom_error.log;

        # Health check endpoint (bypass rate limiting)
        location /api/health {
            proxy_pass http://tearoom_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://tearoom_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
        }

        # Upload endpoints with stricter rate limiting
        location /api/upload-avatar {
            limit_req zone=upload burst=3 nodelay;
            
            proxy_pass http://tearoom_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Upload specific settings
            client_max_body_size 5M;
            proxy_request_buffering off;
        }

        # WebSocket support for real-time chat
        location /socket.io/ {
            proxy_pass http://tearoom_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # Static files with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://tearoom_backend;
            proxy_set_header Host $host;
            
            # Cache static assets
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # All other requests (SPA routing)
        location / {
            proxy_pass http://tearoom_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server block (requires SSL certificates)
    server {
        listen 443 ssl http2;
        server_name localhost;
        
        # SSL configuration (configure with your certificates)
        # ssl_certificate /etc/ssl/certs/tearoom.crt;
        # ssl_certificate_key /etc/ssl/private/tearoom.key;
        
        # Modern SSL configuration
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
        # ssl_prefer_server_ciphers off;
        
        # Same configuration as HTTP server
        # ... (copy from above)
    }
}